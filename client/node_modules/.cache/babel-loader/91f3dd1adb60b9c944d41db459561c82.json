{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\src\\\\components\\\\surveys\\\\SurveyForm.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport SurveyField from './SurveyField';\nimport validateEmails from '../../utilities/validateEmails';\nimport formFields from './formFields';\n\nvar SurveyForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SurveyForm, _Component);\n\n  function SurveyForm() {\n    _classCallCheck(this, SurveyForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SurveyForm).apply(this, arguments));\n  }\n\n  _createClass(SurveyForm, [{\n    key: \"renderFields\",\n    value: function renderFields() {\n      return _.map(formFields, function (_ref) {\n        var name = _ref.name,\n            label = _ref.label;\n        return React.createElement(Field, {\n          key: name,\n          component: SurveyField,\n          type: \"text\",\n          name: name,\n          label: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.props.onSurveySubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.renderFields(), React.createElement(Link, {\n        className: \"red btn-flat left white-text\",\n        to: \"/surveys\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"button\", {\n        className: \"teal btn-flat right white-text\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Next\", React.createElement(\"i\", {\n        className: \"material-icons right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"done\"))));\n    }\n  }]);\n\n  return SurveyForm;\n}(Component);\n\nfunction validate(values) {\n  var errors = {};\n  errors.recipients = validateEmails(values.recipients || \"\");\n\n  _.each(formFields, function (_ref2) {\n    var name = _ref2.name,\n        label = _ref2.label;\n\n    if (!values[name]) {\n      errors[name] = 'You must enter a value for the ' + [label];\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate: validate,\n  form: 'surveyForm',\n  destroyOnUnmount: false\n})(SurveyForm);","map":{"version":3,"sources":["C:\\Users\\ehaddy\\Documents\\Projects\\Playground\\Atepex\\client\\src\\components\\surveys\\SurveyForm.js"],"names":["_","React","Component","reduxForm","Field","Link","SurveyField","validateEmails","formFields","SurveyForm","map","name","label","props","handleSubmit","onSurveySubmit","renderFields","validate","values","errors","recipients","each","form","destroyOnUnmount"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,U;;;;;;;;;;;;;mCACU;AACd,aAAOT,CAAC,CAACU,GAAF,CAAMF,UAAN,EAAkB,gBAAqB;AAAA,YAAlBG,IAAkB,QAAlBA,IAAkB;AAAA,YAAZC,KAAY,QAAZA,KAAY;AAC7C,eAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAED,IAAZ;AAAkB,UAAA,SAAS,EAAEL,WAA7B;AAA0C,UAAA,IAAI,EAAC,MAA/C;AAAsD,UAAA,IAAI,EAAEK,IAA5D;AAAkE,UAAA,KAAK,EAAEC,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,OAFM,CAAP;AAGA;;;6BAEQ;AACR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAM,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,cAAnC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACiB,KAAKC,YAAL,EADjB,EAEgB,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAA+C,QAAA,EAAE,EAAC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFhB,EAGC;AAAQ,QAAA,SAAS,EAAC,gCAAlB;AAAmD,QAAA,IAAI,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEC;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,CAHD,CADD,CADD;AAYA;;;;EApBuBd,S;;AAyBzB,SAASe,QAAT,CAAkBC,MAAlB,EAA0B;AACtB,MAAMC,MAAM,GAAG,EAAf;AAEAA,EAAAA,MAAM,CAACC,UAAP,GAAoBb,cAAc,CAACW,MAAM,CAACE,UAAP,IAAqB,EAAtB,CAAlC;;AAEApB,EAAAA,CAAC,CAACqB,IAAF,CAAOb,UAAP,EAAmB,iBAAqB;AAAA,QAAlBG,IAAkB,SAAlBA,IAAkB;AAAA,QAAZC,KAAY,SAAZA,KAAY;;AACpC,QAAI,CAACM,MAAM,CAACP,IAAD,CAAX,EAAmB;AACfQ,MAAAA,MAAM,CAACR,IAAD,CAAN,GAAe,oCAAoC,CAACC,KAAD,CAAnD;AACH;AACJ,GAJD;;AAMA,SAAOO,MAAP;AACH;;AAED,eAAehB,SAAS,CAAC;AACrBc,EAAAA,QAAQ,EAARA,QADqB;AAErBK,EAAAA,IAAI,EAAE,YAFe;AAGrBC,EAAAA,gBAAgB,EAAE;AAHG,CAAD,CAAT,CAIZd,UAJY,CAAf","sourcesContent":["import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport SurveyField from './SurveyField';\nimport validateEmails from '../../utilities/validateEmails';\nimport formFields from './formFields';\n\nclass SurveyForm extends Component {\n\trenderFields() {\n\t\treturn _.map(formFields, ({ name, label }) => {\n\t\t\treturn <Field key={name} component={SurveyField} type=\"text\" name={name} label={label} />;\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form onSubmit={this.props.handleSubmit(this.props.onSurveySubmit)}>\n                    {this.renderFields()}\n                    <Link className=\"red btn-flat left white-text\" to=\"/surveys\">Cancel</Link>\n\t\t\t\t\t<button className=\"teal btn-flat right white-text\" type=\"submit\">\n\t\t\t\t\t\tNext\n\t\t\t\t\t\t<i className=\"material-icons right\">done</i>\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\nfunction validate(values) {\n    const errors = {};\n\n    errors.recipients = validateEmails(values.recipients || \"\");\n\n    _.each(formFields, ({ name, label }) => {\n        if (!values[name]) {\n            errors[name] = 'You must enter a value for the ' + [label]; \n        }\n    });\n\n    return errors;\n}\n\nexport default reduxForm({\n    validate,\n    form: 'surveyForm',\n    destroyOnUnmount: false\n})(SurveyForm);\n"]},"metadata":{},"sourceType":"module"}