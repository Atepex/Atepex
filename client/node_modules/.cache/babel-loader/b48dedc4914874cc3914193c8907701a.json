{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\src\\\\components\\\\landing\\\\contact\\\\ContactForm.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport ContactField from './ContactField';\nimport validateEmails from '../../../utilities/validateEmails';\nimport { Button } from 'react-bootstrap';\nimport * as actions from '../../../actions/index';\nimport formFields from './formFields';\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactForm, _Component);\n\n  function ContactForm() {\n    _classCallCheck(this, ContactForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).apply(this, arguments));\n  }\n\n  _createClass(ContactForm, [{\n    key: \"renderFields\",\n    value: function renderFields() {\n      return _.map(formFields, function (_ref) {\n        var label = _ref.label,\n            name = _ref.name;\n        return React.createElement(Field, {\n          key: name,\n          component: ContactField,\n          type: \"text\",\n          name: name,\n          label: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Contact Us\"), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.props.onContactSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.renderFields(), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Next\")));\n    }\n  }]);\n\n  return ContactForm;\n}(Component);\n\nfunction validate(values) {\n  var errors = {};\n  errors.email = validateEmails(values.email || \"\");\n\n  _.each(formFields, function (_ref2) {\n    var label = _ref2.label,\n        name = _ref2.name;\n\n    if (!values[name]) {\n      errors[name] = 'You must enter a value for the ' + [label];\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate: validate,\n  form: 'contactForm',\n  destroyOnUnmount: false\n})(ContactForm);","map":{"version":3,"sources":["C:\\Users\\ehaddy\\Documents\\Projects\\Playground\\Atepex\\client\\src\\components\\landing\\contact\\ContactForm.js"],"names":["_","React","Component","reduxForm","Field","ContactField","validateEmails","Button","actions","formFields","ContactForm","map","label","name","props","handleSubmit","onContactSubmit","renderFields","validate","values","errors","email","each","form","destroyOnUnmount"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,W;;;;;;;;;;;;;mCACa;AACX,aAAOV,CAAC,CAACW,GAAF,CAAMF,UAAN,EAAkB,gBAAqB;AAAA,YAAlBG,KAAkB,QAAlBA,KAAkB;AAAA,YAAXC,IAAW,QAAXA,IAAW;AAC1C,eAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAGA,IAAb;AAAoB,UAAA,SAAS,EAAGR,YAAhC;AAA+C,UAAA,IAAI,EAAC,MAApD;AAA2D,UAAA,IAAI,EAAGQ,IAAlE;AAAyE,UAAA,KAAK,EAAGD,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,CAAP;AAGH;;;6BACQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAM,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,eAAnC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,YAAL,EADL,EAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAFJ,CADJ;AASH;;;;EAhBqBf,S;;AAmB1B,SAASgB,QAAT,CAAkBC,MAAlB,EAA0B;AACtB,MAAMC,MAAM,GAAG,EAAf;AACAA,EAAAA,MAAM,CAACC,KAAP,GAAef,cAAc,CAACa,MAAM,CAACE,KAAP,IAAgB,EAAjB,CAA7B;;AACArB,EAAAA,CAAC,CAACsB,IAAF,CAAOb,UAAP,EAAmB,iBAAqB;AAAA,QAAlBG,KAAkB,SAAlBA,KAAkB;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AACpC,QAAI,CAACM,MAAM,CAACN,IAAD,CAAX,EAAmB;AACfO,MAAAA,MAAM,CAACP,IAAD,CAAN,GAAe,oCAAoC,CAACD,KAAD,CAAnD;AACH;AACJ,GAJD;;AAKA,SAAOQ,MAAP;AACH;;AAGD,eAAejB,SAAS,CAAC;AACrBe,EAAAA,QAAQ,EAARA,QADqB;AAErBK,EAAAA,IAAI,EAAE,aAFe;AAGrBC,EAAAA,gBAAgB,EAAE;AAHG,CAAD,CAAT,CAIZd,WAJY,CAAf","sourcesContent":["import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport ContactField from './ContactField';\r\nimport validateEmails from '../../../utilities/validateEmails';\r\nimport { Button } from 'react-bootstrap';\r\nimport * as actions from '../../../actions/index';\r\nimport formFields from './formFields';\r\n\r\nclass ContactForm extends Component {\r\n    renderFields() {\r\n        return _.map(formFields, ({ label, name }) => {\r\n            return <Field key={ name } component={ ContactField } type=\"text\" name={ name } label={ label } />\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Contact Us</h3>\r\n                <form onSubmit={this.props.handleSubmit(this.props.onContactSubmit)}>\r\n                    {this.renderFields()}\r\n                    <Button type=\"submit\" variant=\"primary\">Next</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    errors.email = validateEmails(values.email || \"\");\r\n    _.each(formFields, ({ label, name }) => {\r\n        if (!values[name]) {\r\n            errors[name] = 'You must enter a value for the ' + [label];\r\n        }\r\n    });\r\n    return errors;\r\n}\r\n\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'contactForm',\r\n    destroyOnUnmount: false\r\n})(ContactForm);"]},"metadata":{},"sourceType":"module"}