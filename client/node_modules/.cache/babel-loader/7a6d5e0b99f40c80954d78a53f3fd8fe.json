{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ehaddy\\\\Documents\\\\Projects\\\\Playground\\\\Atepex\\\\client\\\\src\\\\components\\\\landing\\\\contact\\\\ContactForm.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport ContactField from './ContactField';\nimport validateEmails from '../../../utilities/validateEmails';\nimport { Button } from 'react-bootstrap';\nvar formFields = [{\n  label: 'First Name',\n  name: 'fname'\n}, {\n  label: 'Last Name',\n  name: 'lname'\n}, {\n  label: 'Phone',\n  name: 'phone'\n}, {\n  label: 'Email',\n  name: 'email'\n}];\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactForm, _Component);\n\n  function ContactForm() {\n    _classCallCheck(this, ContactForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).apply(this, arguments));\n  }\n\n  _createClass(ContactForm, [{\n    key: \"renderFields\",\n    value: function renderFields() {\n      return _.map(formFields, function (_ref) {\n        var label = _ref.label,\n            name = _ref.name;\n        return React.createElement(Field, {\n          key: name,\n          component: ContactField,\n          type: \"text\",\n          name: name,\n          label: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.props.onContactUsSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.renderFields(), React.createElement(Button, {\n        variant: \"waring\",\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        variant: \"success\",\n        onClick: function onClick() {\n          return submitContactUs(formValues, history);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Send\")));\n    }\n  }]);\n\n  return ContactForm;\n}(Component);\n\nfunction validate(values) {\n  var errors = {};\n  errors.email = validateEmails(values.email || \"\");\n\n  _.each(formFields, function (_ref2) {\n    var label = _ref2.label,\n        name = _ref2.name;\n\n    if (!values[name]) {\n      errors[name] = 'You must enter a value for the ' + [label];\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate: validate,\n  form: 'contactForm'\n})(ContactForm);","map":{"version":3,"sources":["C:\\Users\\ehaddy\\Documents\\Projects\\Playground\\Atepex\\client\\src\\components\\landing\\contact\\ContactForm.js"],"names":["_","React","Component","reduxForm","Field","ContactField","validateEmails","Button","formFields","label","name","ContactForm","map","props","handleSubmit","onContactUsSubmit","renderFields","submitContactUs","formValues","history","validate","values","errors","email","each","form"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,IAAMC,UAAU,GAAI,CAChB;AAAEC,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,IAAI,EAAE;AAA7B,CADgB,EAEhB;AAAED,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,IAAI,EAAE;AAA5B,CAFgB,EAGhB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAHgB,EAIhB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAJgB,CAApB;;IAOMC,W;;;;;;;;;;;;;mCACa;AACX,aAAOX,CAAC,CAACY,GAAF,CAAMJ,UAAN,EAAkB,gBAAqB;AAAA,YAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,YAAXC,IAAW,QAAXA,IAAW;AAC1C,eAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAGA,IAAb;AAAoB,UAAA,SAAS,EAAGL,YAAhC;AAA+C,UAAA,IAAI,EAAC,MAApD;AAA2D,UAAA,IAAI,EAAGK,IAAlE;AAAyE,UAAA,KAAK,EAAGD,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,CAAP;AAGH;;;6BACQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,iBAAnC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,YAAL,EADL,EAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,IAAI,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE;AAAA,iBAAMC,eAAe,CAACC,UAAD,EAAaC,OAAb,CAArB;AAAA,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CADJ;AASH;;;;EAhBqBjB,S;;AAmB1B,SAASkB,QAAT,CAAkBC,MAAlB,EAA0B;AACtB,MAAMC,MAAM,GAAG,EAAf;AACAA,EAAAA,MAAM,CAACC,KAAP,GAAejB,cAAc,CAACe,MAAM,CAACE,KAAP,IAAgB,EAAjB,CAA7B;;AACAvB,EAAAA,CAAC,CAACwB,IAAF,CAAOhB,UAAP,EAAmB,iBAAqB;AAAA,QAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AACpC,QAAI,CAACW,MAAM,CAACX,IAAD,CAAX,EAAmB;AACfY,MAAAA,MAAM,CAACZ,IAAD,CAAN,GAAe,oCAAoC,CAACD,KAAD,CAAnD;AACH;AACJ,GAJD;;AAKA,SAAOa,MAAP;AACH;;AAED,eAAenB,SAAS,CAAC;AACrBiB,EAAAA,QAAQ,EAARA,QADqB;AAErBK,EAAAA,IAAI,EAAE;AAFe,CAAD,CAAT,CAGZd,WAHY,CAAf","sourcesContent":["import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport ContactField from './ContactField';\r\nimport validateEmails from '../../../utilities/validateEmails';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst formFields =  [\r\n    { label: 'First Name', name: 'fname' },\r\n    { label: 'Last Name', name: 'lname' },\r\n    { label: 'Phone', name: 'phone' },\r\n    { label: 'Email', name: 'email' },\r\n];\r\n\r\nclass ContactForm extends Component {\r\n    renderFields() {\r\n        return _.map(formFields, ({ label, name }) => {\r\n            return <Field key={ name } component={ ContactField } type=\"text\" name={ name } label={ label } />\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.handleSubmit(this.props.onContactUsSubmit)}>\r\n                    {this.renderFields()}\r\n                    <Button variant=\"waring\" href=\"/\">Cancel</Button>\r\n                    <Button variant=\"success\" onClick={() => submitContactUs(formValues, history)}>Send</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    errors.email = validateEmails(values.email || \"\");\r\n    _.each(formFields, ({ label, name }) => {\r\n        if (!values[name]) {\r\n            errors[name] = 'You must enter a value for the ' + [label];\r\n        }\r\n    });\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'contactForm',\r\n})(ContactForm);"]},"metadata":{},"sourceType":"module"}